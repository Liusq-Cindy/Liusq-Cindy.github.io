webpackJsonp([40],{NzsS:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var c={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("section",[t("h3",[t("strong",[n._v("图片懒加载")])]),n._v(" "),t("p",[n._v("图片懒加载在一些图片密集型的网站中运用比较多，通过图片懒加载可以让一些不可视的图片不去加载，避免一次性加载过多的图片导致请求阻塞（浏览器一般对同一域名下的并发请求的连接数有限制），这样就可以提高网站的加载速度，提高用户体验。")]),n._v(" "),t("h3",[t("strong",[n._v("原理")])]),n._v(" "),t("p",[n._v("将页面中的img标签src指向一张小图片或者src为空，然后定义data-src（这个属性可以自定义命名，我才用data-src）属性指向真实的图片。src指向一张默认的图片，否则当src为空时也会向服务器发送一次请求。可以指向loading的地址。注意，图片要指定宽高。")]),n._v(" "),t("p",[n._v("**"),t("code",[n._v('<**img src**=**"default.jpg" data**-**src**=**"666.jpg" **/>**')])]),n._v(" "),t("p",[n._v("当载入页面时，先把可视区域内的img标签的data-src属性值负给src，然后监听滚动事件，把用户即将看到的图片加载。这样便实现了懒加载。")]),n._v(" "),t("h3",[t("strong",[n._v("实例")])]),n._v(" "),t("pre",[t("code",{staticClass:"language-jsx"},[n._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <style>\n    img {\n      display: block;\n      margin-bottom: 50px;\n      width: 400px;\n      height: 400px;\n    }\n  </style>\n</head>\n<body>\n  <img src="Go.png" data-src="./lifecycle.jpeg" alt="">\n  <img src="Go.png" data-src="./lifecycle.jpeg" alt="">\n  <img src="Go.png" data-src="./lifecycle.jpeg" alt="">\n  <img src="Go.png" data-src="./lifecycle.jpeg" alt="">\n  <img src="Go.png" data-src="./lifecycle.jpeg" alt="">\n  <img src="Go.png" data-src="./lifecycle.jpeg" alt="">\n  <img src="Go.png" data-src="./lifecycle.jpeg" alt="">\n  <img src="Go.png" data-src="./lifecycle.jpeg" alt="">\n  <img src="Go.png" data-src="./lifecycle.jpeg" alt="">\n  <img src="Go.png" data-src="./lifecycle.jpeg" alt="">\n  <img src="Go.png" data-src="./lifecycle.jpeg" alt="">\n  <script>\n\t\tlet num = document.getElementsByTagName(\'img\').length;\n    let img = document.getElementsByTagName("img");\n    let n = 0; //存储图片加载到的位置，避免每次都从第一张图片开始遍历\n\n    lazyload(); //页面载入完毕加载可视区域内的图片\n\n    window.onscroll = lazyload;\n\n    function lazyload() { //监听页面滚动事件\n      let seeHeight = document.documentElement.clientHeight; //可见区域高度\n      let scrollTop = document.documentElement.scrollTop || document.body.scrollTop; //滚动条距离顶部高度\n      for (let i = n; i < num; i++) {\n        if (img[i].offsetTop < seeHeight + scrollTop) {\n          if (img[i].getAttribute("src") == "Go.png") {\n            img[i].src = img[i].getAttribute("data-src");\n          }\n          n = i + 1;\n        }\n      }\n    }\n  <\/script>\n\n</body>\n\n</html>\n')])])])}]},l=t("VU/8")(null,c,!1,null,null,null);e.default=l.exports},WMy8:function(n,e,t){n.exports=t("NzsS")}});
//# sourceMappingURL=40.18065b94f4639c79f6ef.js.map