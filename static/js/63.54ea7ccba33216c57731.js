webpackJsonp([63],{HTka:function(t,s,e){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var n={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("section",[e("h1",[t._v("简介")]),t._v(" "),e("p",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。每一个 Vuex 应用的核心就是 "),e("code",[t._v("store")]),t._v("（仓库）。“store” 基本上就是一个容器，它包含着你的应用中大部分的状态 ( state )。")]),t._v(" "),e("p",[t._v("（1）Vuex 的状态存储是响应式的。当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。")]),t._v(" "),e("p",[t._v("（2）改变 store 中的状态的唯一途径就是"),e("code",[t._v("显式地提交 (commit) mutation")]),t._v("。这样使得我们可以方便地跟踪每一个状态的变化。")]),t._v(" "),e("h3",[t._v("主要包括以下几个模块：")]),t._v(" "),e("ul",[e("li",[t._v("State：定义了应用状态的数据结构，可以在这里设置默认的初始状态。")]),t._v(" "),e("li",[t._v("Getter：允许组件从 Store 中获取数据，mapGetters 辅助函数仅仅是将 store 中的 getter 映射到局部计算属性。")]),t._v(" "),e("li",[t._v("Mutation：是唯一更改 store 中状态的方法，且"),e("code",[t._v("必须是同步函数")]),t._v("。")]),t._v(" "),e("li",[t._v("Action： @用于提交 mutation，而不是直接变更状态，可以包含任意"),e("code",[t._v("异步操作")]),t._v("。")]),t._v(" "),e("li",[t._v("Module：允许将单一的 Store 拆分为多个 store 且同时保存在单一的状态树中。")])]),t._v(" "),e("h1",[t._v("常见问题QA")]),t._v(" "),e("ol",[e("li",[t._v("vuex是什么？什么场景使用？")]),t._v(" "),e("li",[t._v("vuex有哪几种属性？")]),t._v(" "),e("li",[t._v("Vuex中actions和mutations的区别")])]),t._v(" "),e("h2",[t._v("1、vuex是什么？什么场景使用？")]),t._v(" "),e("p",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。简单来说就是：应用遇到多个组件共享状态时，使用vuex。")]),t._v(" "),e("p",[t._v("场景：多个组件共享数据或者是跨组件传递数据时")]),t._v(" "),e("p",[t._v("vuex的流程")]),t._v(" "),e("p",[t._v("页面通过mapAction异步提交事件到action。action通过commit把对应参数同步提交到mutation，mutation会修改state中对应的值。最后通过getter把对应值跑出去，在页面的计算属性中，通过，mapGetter来动态获取state中的值")]),t._v(" "),e("h2",[t._v("2、vuex有哪几种属性？")]),t._v(" "),e("p",[t._v("有五种,分别是State , Getter , Mutation , Action , Module (就是mapAction)")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("state：vuex的基本数据，用来存储变量")])]),t._v(" "),e("li",[e("p",[t._v("getter：从基本数据(state)派生的数据，相当于state的计算属性")])]),t._v(" "),e("li",[e("p",[t._v("mutation：提交更新数据的方法，必须是同步的(如果需要异步使用action)。每个mutation 都有一个字符串的 事件类型 (type) 和 一个 回调函数 (handler)。回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数，提交载荷作为第二个参数。")])]),t._v(" "),e("li",[e("p",[t._v("action：和mutation的功能大致相同，不同之处在于 ==》1. Action 提交的是 mutation，而不是直接变更状态。 2. Action 可以包含任意异步操作。")])]),t._v(" "),e("li",[e("p",[t._v("modules：模块化vuex，可以让每一个模块拥有自己的state、mutation、action、getters,使得结构非常清晰，方便管理。")])])]),t._v(" "),e("h2",[t._v("3、Vuex中actions和mutations的区别")]),t._v(" "),e("h3",[t._v("Mutation")]),t._v(" "),e("p",[t._v("更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。Vuex 中的 mutation 非常类似于事件：每个 mutation 都有一个字符串的 事件类型 (type) 和 一个 回调函数 (handler)。这个回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数")]),t._v(" "),e("pre",[e("code",{staticClass:"language-jsx"},[e("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" store = "),e("span",{staticClass:"hljs-keyword"},[t._v("new")]),t._v(" Vuex.Store({\n  "),e("span",{staticClass:"hljs-attr"},[t._v("state")]),t._v(": {\n    "),e("span",{staticClass:"hljs-attr"},[t._v("count")]),t._v(": "),e("span",{staticClass:"hljs-number"},[t._v("1")]),t._v("\n  },\n  "),e("span",{staticClass:"hljs-attr"},[t._v("mutations")]),t._v(": {\n    increment (state) {\n      "),e("span",{staticClass:"hljs-comment"},[t._v("// 变更状态")]),t._v("\n      state.count++\n    }\n  }\n})\n")])]),t._v(" "),e("h3",[t._v("Action")]),t._v(" "),e("p",[t._v("Action 类似于 mutation，不同在于：")]),t._v(" "),e("ul",[e("li",[t._v("Action 提交的是 mutation，而不是直接变更状态。")]),t._v(" "),e("li",[t._v("Action 可以包含任意异步操作。 .")])]),t._v(" "),e("pre",[e("code",{staticClass:"language-jsx"},[e("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" store = "),e("span",{staticClass:"hljs-keyword"},[t._v("new")]),t._v(" Vuex.Store({\n  "),e("span",{staticClass:"hljs-attr"},[t._v("state")]),t._v(": {\n    "),e("span",{staticClass:"hljs-attr"},[t._v("count")]),t._v(": "),e("span",{staticClass:"hljs-number"},[t._v("0")]),t._v("\n  },\n  "),e("span",{staticClass:"hljs-attr"},[t._v("mutations")]),t._v(": {\n    increment (state) {\n      state.count++\n    }\n  },\n  "),e("span",{staticClass:"hljs-attr"},[t._v("actions")]),t._v(": {\n    increment (context) {\n      context.commit("),e("span",{staticClass:"hljs-string"},[t._v("'increment'")]),t._v(")\n    }\n  }\n})\n")])])])}]},a=e("VU/8")(null,n,!1,null,null,null);s.default=a.exports},RMS1:function(t,s,e){t.exports=e("HTka")}});
//# sourceMappingURL=63.54ea7ccba33216c57731.js.map