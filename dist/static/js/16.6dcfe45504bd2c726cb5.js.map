{"version":3,"sources":["webpack:///./src/components/posts/vue/vueConnect.md","webpack:///./node_modules/vue-markdown-loader/_cache/vueConnect.vue?b1c5","webpack:///./node_modules/vue-markdown-loader/_cache/vueConnect.vue"],"names":["module","exports","__webpack_require__","vueConnect","render","this","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","_v","Component","normalizeComponent","__webpack_exports__"],"mappings":"0CAAAA,EAAAC,QAAiBC,EAAQ,4FCAzB,IAGeC,GADEC,OAFjB,WAA0BC,KAAaC,eAAbD,KAAuCE,MAAAC,GAAwB,OAA/DH,KAA+DI,GAAA,IAExEC,iBADjB,WAAoC,IAAAC,EAAAN,KAAaO,EAAAD,EAAAL,eAA0BE,EAAAG,EAAAJ,MAAAC,IAAAI,EAAwB,OAAAJ,EAAA,WAAAA,EAAA,MAAAA,EAAA,UAAAG,EAAAE,GAAA,wBAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,gJAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAA,EAAA,UAAAG,EAAAE,GAAA,kCAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,+CAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAA,EAAA,UAAAG,EAAAE,GAAA,8CAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAA,EAAA,MAAAG,EAAAE,GAAA,4DAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,qCAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAA,EAAA,UAAAG,EAAAE,GAAA,kDAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,6EAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAA,EAAA,UAAAG,EAAAE,GAAA,uCAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAA,EAAA,MAAAG,EAAAE,GAAA,gLAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,wFAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAA,EAAA,UAAAG,EAAAE,GAAA,sCAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,0IAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAA,EAAA,UAAAG,EAAAE,GAAA,gCAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,6GAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAA,EAAA,MAAAG,EAAAE,GAAA,mFAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,+ECYnGC,EAbyBZ,EAAQ,OAajCa,CAXA,KAaEZ,GATF,EAEA,KAEA,KAEA,MAUea,EAAA,QAAAF,EAAiB","file":"static/js/16.6dcfe45504bd2c726cb5.js","sourcesContent":["module.exports = require(\"!!vue-loader!../../../../node_modules/vue-markdown-loader/_cache/vueConnect.vue\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/posts/vue/vueConnect.md\n// module id = 3XH9\n// module chunks = 16","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('h1',[_c('strong',[_vm._v(\"Vue 组件间通信有哪几种方式？\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Vue 组件间通信是面试常考的知识点之一，这题有点类似于开放题，你回答出越多方法当然越加分，表明你对 Vue 掌握的越熟练。Vue 组件间通信只要指以下 3 类通信：父子组件通信、隔代组件通信、兄弟组件通信，下面我们分别介绍每种通信方式且会说明此种方法可适用于哪类组件间通信。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"（1）props / $emit 适用 父子组件通信\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"这种方法是 Vue 组件的基础，相信大部分同学耳闻能详，所以此处就不举例展开介绍。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"（2）ref 与 $parent / $children 适用 父子组件通信\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"ref：如果在普通的 DOM 元素上使用，引用指向的就是 DOM 元素；如果用在子组件上，引用就指向组件实例\")]),_vm._v(\" \"),_c('li',[_vm._v(\"$parent / $children：访问父 / 子实例\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"（3）EventBus （$emit / $on） 适用于 父子、隔代、兄弟组件通信\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"这种方法通过一个空的 Vue 实例作为中央事件总线（事件中心），用它来触发事件和监听事件，从而实现任何组件间的通信，包括父子、隔代、兄弟组件。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"（4）$attrs/$listeners 适用于 隔代组件通信\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"$attrs：包含了父作用域中不被 prop 所识别 (且获取) 的特性绑定 ( class 和 style 除外 )。当一个组件没有声明任何 prop 时，这里会包含所有父作用域的绑定 ( class 和 style 除外 )，并且可以通过 v-bind=\\\"$attrs\\\" 传入内部组件。通常配合 inheritAttrs 选项一起使用。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"$listeners：包含了父作用域中的 (不含 .native 修饰器的) v-on 事件监听器。它可以通过 v-on=\\\"$listeners\\\" 传入内部组件\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"（5）provide / inject 适用于 隔代组件通信\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"祖先组件中通过 provider 来提供变量，然后在子孙组件中通过 inject 来注入变量。provide / inject API 主要解决了跨级组件间的通信问题，不过它的使用场景，主要是子组件获取上级组件的状态，跨级组件间建立了一种主动提供与依赖注入的关系。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"（6）Vuex 适用于 父子、隔代、兄弟组件通信\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。每一个 Vuex 应用的核心就是 store（仓库）。“store” 基本上就是一个容器，它包含着你的应用中大部分的状态 ( state )。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"Vuex 的状态存储是响应式的。当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"改变 store 中的状态的唯一途径就是显式地提交 (commit) mutation。这样使得我们可以方便地跟踪每一个状态的变化。\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7be5fdac\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./node_modules/vue-markdown-loader/_cache/vueConnect.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7be5fdac\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../vue-loader/lib/selector?type=template&index=0!./vueConnect.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader!./node_modules/vue-markdown-loader/_cache/vueConnect.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}