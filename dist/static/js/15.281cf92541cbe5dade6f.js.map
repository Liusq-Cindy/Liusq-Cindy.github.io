{"version":3,"sources":["webpack:///./node_modules/vue-markdown-loader/_cache/vuePrinciple.vue?d5ab","webpack:///./node_modules/vue-markdown-loader/_cache/vuePrinciple.vue","webpack:///./src/components/posts/vue/vuePrinciple.md"],"names":["vuePrinciple","render","this","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","_v","attrs","href","src","alt","staticClass","Component","__webpack_require__","normalizeComponent","__webpack_exports__","module","exports"],"mappings":"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","file":"static/js/15.281cf92541cbe5dade6f.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"参考地址：\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://www.cnblogs.com/chenwenhao/p/11258895.html#_label17\"}},[_vm._v(\"https://www.cnblogs.com/chenwenhao/p/11258895.html#_label17\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"此处介绍vue的一些原理：双向绑定原理、响应式原理等等\")]),_vm._v(\" \"),_c('ol',[_c('li',[_c('strong',[_c('a',{attrs:{\"href\":\"https://www.notion.so/Vue-d3d43149aff64337a35deb2810810e1b\"}},[_vm._v(\"vue的双向绑定原理\")])])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://www.notion.so/Vue-d3d43149aff64337a35deb2810810e1b\"}},[_vm._v(\"如何理解V\"),_c('strong',[_vm._v(\"ue组件中的响应式系统?\")])])]),_vm._v(\" \"),_c('li',[_c('strong',[_c('a',{attrs:{\"href\":\"https://www.notion.so/Vue-d3d43149aff64337a35deb2810810e1b\"}},[_vm._v(\"虚拟 DOM 实现原理\")])])]),_vm._v(\" \"),_c('li',[_c('strong',[_c('a',{attrs:{\"href\":\"https://www.notion.so/Vue-d3d43149aff64337a35deb2810810e1b\"}},[_vm._v(\"v-model的原理\")])])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://www.notion.so/Vue-d3d43149aff64337a35deb2810810e1b\"}},[_vm._v(\"什么是MVVM\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://www.notion.so/Vue-d3d43149aff64337a35deb2810810e1b\"}},[_vm._v(\"vue组件和根实例的关系\")])])]),_vm._v(\" \"),_c('h1',[_vm._v(\"一、Vue的双向绑定原理\")]),_vm._v(\" \"),_c('p',[_vm._v(\"mvvm 双向绑定，采用\"),_c('code',[_vm._v(\"数据劫持\")]),_vm._v(\"结合\"),_c('code',[_vm._v(\"发布者-订阅者模式\")]),_vm._v(\"的方式，通过 \"),_c('code',[_vm._v(\"Object.defineProperty()\")]),_vm._v(\" 来劫持各个属性的 \"),_c('code',[_vm._v(\"setter、getter\")]),_vm._v(\"，在数据变动时发布消息给订阅者，触发相应的监听回调。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3b28e0c4-529a-4281-9e47-6a25560389c4/Untitled.png\",\"alt\":\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3b28e0c4-529a-4281-9e47-6a25560389c4/Untitled.png\"}})]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"几个要点：\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"1、实现一个数据监听器 Observer，能够对数据对象的所有属性进行监听，如有变动可拿到最新值并通知订阅者\")]),_vm._v(\" \"),_c('p',[_vm._v(\"2、实现一个指令解析器 Compile，对每个元素节点的指令进行扫描和解析，根据指令模板替换数据，以及绑定相应的更新函数\")]),_vm._v(\" \"),_c('p',[_vm._v(\"3、实现一个 Watcher，作为连接 Observer 和 Compile 的桥梁，能够订阅并收到每个属性变动的通知，执行指令绑定的相应回调函数，从而更新视图\")]),_vm._v(\" \"),_c('p',[_vm._v(\"4、mvvm 入口函数，整合以上三者\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"具体步骤：\")])]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"需要 observe 的数据对象进行递归遍历，包括子属性对象的属性，都加上 setter 和 getter这样的话，给这个对象的某个值赋值，就会触发 setter，那么就能监听到了数据变化\")]),_vm._v(\" \"),_c('li',[_vm._v(\"compile 解析模板指令，将模板中的变量替换成数据，然后初始化渲染页面视图，并将每个指令对应的节点绑定更新函数，添加监听数据的订阅者，一旦数据有变动，收到通知，更新视图\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Watcher 订阅者是 Observer 和 Compile 之间通信的桥梁，主要做的事情是:\\n\"),_c('ul',[_c('li',[_vm._v(\"在自身实例化时往属性订阅器(dep)里面添加自己\")]),_vm._v(\" \"),_c('li',[_vm._v(\"自身必须有一个 update() 方法\")]),_vm._v(\" \"),_c('li',[_vm._v(\"待属性变动 dep.notice() 通知时，能调用自身的 update() 方法，并触发 Compile 中绑定的回调，则功成身退。\")])])]),_vm._v(\" \"),_c('li',[_vm._v(\"MVVM 作为数据绑定的入口，整合 Observer、Compile 和 Watcher 三者，通过Observer来监听自己的 model 数据变化，通过 Compile 来解析编译模板指令，最终利用 Watcher 搭起 Observer 和 Compile 之间的通信桥梁，达到数据变化 -> 视图更新；视图交互变化(input) -> 数据 model 变更的双向绑定效果。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"参考网址：\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://www.pianshen.com/article/72922044501/\"}},[_vm._v(\"Vue中的响应式数据/数据双向绑定原理 - 程序员大本营\")])]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://www.jb51.net/article/142950.htm\"}},[_vm._v(\"Vue实现双向绑定的原理以及响应式数据的方法_vue.js_脚本之家\")])]),_vm._v(\" \"),_c('h1',[_vm._v(\"二、如何理解V\"),_c('strong',[_vm._v(\"ue组件中的响应式系统?\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"https://img2018.cnblogs.com/blog/1062623/201908/1062623-20190808112924933-354933996.jpg\",\"alt\":\"https://img2018.cnblogs.com/blog/1062623/201908/1062623-20190808112924933-354933996.jpg\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"响应式系统简述:\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"任何一个 Vue Component 都有一个与之对应的 Watcher 实例\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Vue 的 data 上的属性会被添加 getter 和 setter 属性\")]),_vm._v(\" \"),_c('li',[_vm._v(\"当 Vue Component render 函数被执行的时候, data 上会被 触碰(touch), 即被读, getter 方法会被调用, 此时 Vue 会去记录此 Vue component 所依赖的所有 data。(这一过程被称为依赖收集)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"data 被改动时（主要是用户操作）, 即被写, setter 方法会被调用, 此时 Vue 会去通知所有依赖于此 data 的组件去调用他们的 render 函数进行更新\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"对象和数组实现响应式的差别\")]),_vm._v(\" \"),_c('p',[_vm._v(\"1、对象实现响应式：\")]),_vm._v(\" \"),_c('p',[_vm._v(\"是在初始化的时候利用definePrototype的定义set和get过滤器，在进行组件模板编译时实现water的监听搜集依赖项，当数据发生变化时在set中通过调用dep.notify进行发布通知，实现视图的更新。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"2、数组实现响应式：\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对于数组则是通过继承重写数组的方法splice、pop、push、shift、unshift、sort、reverse、等可以修改原数组的方式实现响应式的，但是通过length以及直接利用item[index]方式修改数组是不能实现响应式的改变dom（这种两种方式涉及到数组的内部实现）。在数据更新后为了避免过于频繁的进行dom的操作，在vue中会将更新的dom进行批量操作，而不是直接有数据更新就刷新dom，vue将需要更新的dom压入异步队列记性批量操作，提高性能。\")]),_vm._v(\" \"),_c('h1',[_vm._v(\"三、\"),_c('strong',[_vm._v(\"虚拟 DOM 实现原理\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"虚拟DOM本质上是JavaScript对象,是对真实DOM的抽象\")]),_vm._v(\" \"),_c('li',[_vm._v(\"状态变更时，记录新树和旧树的差异\")]),_vm._v(\" \"),_c('li',[_vm._v(\"最后把差异更新到真正的dom中\")])]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"详细实现见 面试官: \"),_c('a',{attrs:{\"href\":\"https://user-gold-cdn.xitu.io/2019/8/1/16c49afec13e0416\"}},[_vm._v(\"你对虚拟DOM原理的理解?\")])])]),_vm._v(\" \"),_c('h3',[_c('strong',[_vm._v(\"既然 Vue 通过数据劫持可以精准探测数据变化,为什么还需要虚拟 DOM 进行 diff 检测差异?\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"考点: Vue 的变化侦测原理前置知识: 依赖收集、虚拟 DOM、响应式系统现代前端框架有两种方式侦测变化，一种是pull，一种是push\")]),_vm._v(\" \"),_c('p',[_vm._v(\"pull: 其代表为React，我们可以回忆一下React是如何侦测到变化的,我们通常会用setStateAPI显式更新，然后React会进行一层层的Virtual Dom Diff操作找出差异，然后Patch到DOM上，React从一开始就不知道到底是哪发生了变化，只是知道「有变化了」，然后再进行比较暴力的Diff操作查找「哪发生变化了」，另外一个代表就是Angular的脏检查操作。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"push: Vue的响应式系统则是push的代表，当Vue程序初始化的时候就会对数据data进行依赖的收集，一但数据发生变化,响应式系统就会立刻得知。因此Vue是一开始就知道是「在哪发生变化了」，但是这又会产生一个问题，如果你熟悉Vue的响应式系统就知道，通常一个绑定一个数据就需要一个Watcher，一但我们的绑定细粒度过高就会产生大量的Watcher，这会带来内存以及依赖追踪的开销，而细粒度过低会无法精准侦测变化,因此Vue的设计是选择中等细粒度的方案,在组件级别进行push侦测的方式,也就是那套响应式系统,通常我们会第一时间侦测到发生变化的组件,然后在组件内部进行Virtual Dom Diff获取更加具体的差异，而Virtual Dom Diff则是pull操作，Vue是push+pull结合的方式进行变化侦测的。\")]),_vm._v(\" \"),_c('h1',[_vm._v(\"四**、v-model 的原理？**\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们在 vue 项目中主要使用 v-model 指令在表单 input、textarea、select 等元素上创建双向数据绑定，我们知道 \"),_c('strong',[_vm._v(\"v-model 本质上不过是语法糖，v-model 在内部为不同的输入元素使用不同的属性并抛出不同的事件\")]),_vm._v(\"：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"text 和 textarea 元素使用 value 属性和 input 事件；\")]),_vm._v(\" \"),_c('li',[_vm._v(\"checkbox 和 radio 使用 checked 属性和 change 事件；\")]),_vm._v(\" \"),_c('li',[_vm._v(\"select 字段将 value 作为 prop 并将 change 作为事件。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"以 input 表单元素为例：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"language-jsx\"},[_vm._v(\"<input v-model=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'something'\")]),_vm._v(\">\\n相当于\\n<input v-bind:value=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"something\\\"\")]),_vm._v(\" v-on:input=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"something = $event.target.value\\\"\")]),_vm._v(\">\\n\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如果在自定义组件中，v-model 默认会利用名为 value 的 prop 和名为 input 的事件，如下所示：\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"language-jsx\"},[_vm._v(\"父组件：\\n<ModelChild v-model=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"message\\\"\")]),_vm._v(\"><\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/ModelChild>\\n子组件：\\n<div>\"),_c('span',[_vm._v(\"{{\")]),_vm._v(\"value\"),_c('span',[_vm._v(\"}}\")]),_vm._v(\"</\")]),_vm._v(\"div>\\n \\nprops:{\\n    \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"value\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-built_in\"},[_vm._v(\"String\")]),_vm._v(\"\\n},\\n\"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"methods\")]),_vm._v(\": {\\n  test1(){\\n     \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"this\")]),_vm._v(\".$emit(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'input'\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'小红'\")]),_vm._v(\")\\n  },\\n},\\n\")])]),_vm._v(\" \"),_c('h1',[_vm._v(\"五、\"),_c('strong',[_vm._v(\"什么是 MVVM？\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Model–View–ViewModel （MVVM） 是一个软件架构设计模式，由微软 WPF 和 Silverlight 的架构师 Ken Cooper 和 Ted Peters 开发，是一种简化用户界面的事件驱动编程方式。由 John Gossman（同样也是 WPF 和 Silverlight 的架构师）于2005年在他的博客上发表\")]),_vm._v(\" \"),_c('p',[_vm._v(\"MVVM 源自于经典的 Model–View–Controller（MVC）模式 ，MVVM 的出现促进了前端开发与后端业务逻辑的分离，极大地提高了前端开发效率，MVVM 的核心是 ViewModel 层，它就像是一个中转站（value converter），负责转换 Model 中的数据对象来让数据变得更容易管理和使用，该层向上与视图层进行双向数据绑定，向下与 Model 层通过接口请求进行数据交互，起呈上启下作用。如下图所示：\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWctYmxvZy5jc2RuaW1nLmNuL2ltZ19jb252ZXJ0LzIwY2YzMTM3ZGIyZjE3NTA4NjkzYTNmOGExZDY0NjUwLnBuZw?x-oss-process=image/format,png\"}},[_vm._v(\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWctYmxvZy5jc2RuaW1nLmNuL2ltZ19jb252ZXJ0LzIwY2YzMTM3ZGIyZjE3NTA4NjkzYTNmOGExZDY0NjUwLnBuZw?x-oss-process=image/format,png\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"（1）View 层\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"View 是视图层，也就是用户界面。前端主要由 HTML 和 CSS 来构建 。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"（2）Model 层\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Model 是指数据模型，泛指后端进行的各种业务逻辑处理和数据操控，对于前端来说就是后端提供的 api 接口。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"（3）ViewModel 层\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"ViewModel 是由前端开发人员组织生成和维护的视图数据层。在这一层，前端开发者对从后端获取的 Model 数据进行转换处理，做二次封装，以生成符合 View 层使用预期的视图数据模型。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"需要注意的是 ViewModel 所封装出来的数据模型包括视图的状态和行为两部分，而 Model 层的数据模型是只包含状态的，比如页面的这一块展示什么，而页面加载进来时发生什么，点击这一块发生什么，这一块滚动时发生什么这些都属于视图行为（交互），视图状态和行为都封装在了 ViewModel 里。这样的封装使得 ViewModel 可以完整地去描述 View 层。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"MVVM 框架实现了双向绑定，这样 ViewModel 的内容会实时展现在 View 层，前端开发者再也不必低效又麻烦地通过操纵 DOM 去更新视图，MVVM 框架已经把最脏最累的一块做好了，我们开发者只需要处理和维护 ViewModel，更新数据视图就会自动得到相应更新。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这样 View 层展现的不是 Model 层的数据，而是 ViewModel 的数据，由 ViewModel 负责与 Model 层交互，这就完全解耦了 View 层和 Model 层，这个解耦是至关重要的，它是前后端分离方案实施的重要一环。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们以下通过一个 Vue 实例来说明 MVVM 的具体实现，有 Vue 开发经验的同学应该一目了然：\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"（1）View 层\")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"language-jsx\"},[_vm._v(\"\\n<div id=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"app\\\"\")]),_vm._v(\">\\n    \"),_c('span',{staticClass:\"xml\"},[_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"p\")]),_vm._v(\">\")]),_c('span',[_vm._v(\"{{\")]),_vm._v(\"message\"),_c('span',[_vm._v(\"}}\")]),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"p\")]),_vm._v(\">\")])]),_vm._v(\"\\n    \"),_c('span',{staticClass:\"xml\"},[_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"button\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"v-on:click\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"showMessage()\\\"\")]),_vm._v(\">\")]),_vm._v(\"Click me\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"button\")]),_vm._v(\">\")])]),_vm._v(\"\\n<\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/div>\\n\")])])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"（2）ViewModel 层\")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"language-jsx\"},[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" app = \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"new\")]),_vm._v(\" Vue({\\n    \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"el\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'#app'\")]),_vm._v(\",\\n    \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"data\")]),_vm._v(\": {\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 用于描述视图状态\")]),_vm._v(\"\\n        \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"message\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'Hello Vue!'\")]),_vm._v(\",\\n    },\\n    \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"methods\")]),_vm._v(\": {\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 用于描述视图行为\")]),_vm._v(\"\\n        showMessage(){\\n            \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"let\")]),_vm._v(\" vm = \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"this\")]),_vm._v(\";\\n            alert(vm.message);\\n        }\\n    },\\n    created(){\\n        \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"let\")]),_vm._v(\" vm = \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"this\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// Ajax 获取 Model 层的数据\")]),_vm._v(\"\\n        ajax({\\n            \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"url\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'/your/server/data/api'\")]),_vm._v(\",\\n            success(res){\\n                vm.message = res;\\n            }\\n        });\\n    }\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"（3） Model 层\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"language-jsx\"},[_vm._v(\"{\\n    \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"url\\\"\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"/your/server/data/api\\\"\")]),_vm._v(\",\\n    \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"res\\\"\")]),_vm._v(\": {\\n        \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"success\\\"\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-literal\"},[_vm._v(\"true\")]),_vm._v(\",\\n        \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"name\\\"\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"IoveC\\\"\")]),_vm._v(\",\\n        \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"domain\\\"\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"www.cnblogs.com\\\"\")]),_vm._v(\"\\n    }\\n\\n\")])]),_vm._v(\" \"),_c('h1',[_vm._v(\"六、vue组件和根实例的关系\")]),_vm._v(\" \"),_c('p',[_vm._v(\"理解vue的实例和vue的组件的关系，参考下文：\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"https://blog.csdn.net/qq_35139897/article/details/103051490\"}},[_vm._v(\"vue-cli构建的项目，vue组件和根实例的关系_qq_35139897的博客-CSDN博客\")])]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"一般来说，我们的vue项目，一个项目，就是一个vue的实例。我们所说的vue组件，只是vue component的实例\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"1.整个项目是一个vue的实例\")]),_vm._v(\" \"),_c('p',[_vm._v(\"2.每个页面或者每个组件是一个vue component的实例\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"从根目录可以看到，我们项目都有有个index.html文件，里面一个div的id为‘app’，在main.js文件中，会引入vue，vue实例会挂载到app这个标签内，以及router、vuex等插件。main.js中初始化new Vue中会导入顶级单文件组件App.vue，App.vue中会通过路由控制来引入其他的各种单文件组件\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如果我们使用vue-cli来初始化一个项目，以上就不用自己去构建，脚手架会帮我们搭好，还会引入webpack等打包工具。\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1da127aa\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./node_modules/vue-markdown-loader/_cache/vuePrinciple.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1da127aa\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../vue-loader/lib/selector?type=template&index=0!./vuePrinciple.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader!./node_modules/vue-markdown-loader/_cache/vuePrinciple.vue\n// module id = null\n// module chunks = ","module.exports = require(\"!!vue-loader!../../../../node_modules/vue-markdown-loader/_cache/vuePrinciple.vue\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/posts/vue/vuePrinciple.md\n// module id = CTKF\n// module chunks = 15"],"sourceRoot":""}