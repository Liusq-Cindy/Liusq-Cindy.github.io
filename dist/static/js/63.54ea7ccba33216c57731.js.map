{"version":3,"sources":["webpack:///./node_modules/vue-markdown-loader/_cache/VuexBasic.vue?7a40","webpack:///./node_modules/vue-markdown-loader/_cache/VuexBasic.vue","webpack:///./src/components/posts/vue/VuexBasic.md"],"names":["VuexBasic","render","this","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","_v","staticClass","Component","__webpack_require__","normalizeComponent","__webpack_exports__","module","exports"],"mappings":"sGAAA,IAGeA,GADEC,OAFjB,WAA0BC,KAAaC,eAAbD,KAAuCE,MAAAC,GAAwB,OAA/DH,KAA+DI,GAAA,IAExEC,iBADjB,WAAoC,IAAAC,EAAAN,KAAaO,EAAAD,EAAAL,eAA0BE,EAAAG,EAAAJ,MAAAC,IAAAI,EAAwB,OAAAJ,EAAA,WAAAA,EAAA,MAAAG,EAAAE,GAAA,QAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,qDAAAL,EAAA,QAAAG,EAAAE,GAAA,WAAAF,EAAAE,GAAA,uDAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,sFAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,2BAAAL,EAAA,QAAAG,EAAAE,GAAA,6BAAAF,EAAAE,GAAA,6BAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,iBAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAA,EAAA,MAAAG,EAAAE,GAAA,wCAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,6EAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,iCAAAL,EAAA,QAAAG,EAAAE,GAAA,aAAAF,EAAAE,GAAA,OAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,2CAAAL,EAAA,QAAAG,EAAAE,GAAA,UAAAF,EAAAE,GAAA,OAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,sDAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,YAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAA,EAAA,MAAAG,EAAAE,GAAA,qBAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,iBAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,iCAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,uBAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,gHAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,4BAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,aAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,6IAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,mBAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,sEAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAA,EAAA,MAAAA,EAAA,KAAAG,EAAAE,GAAA,8BAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAA,EAAA,KAAAG,EAAAE,GAAA,8CAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAA,EAAA,KAAAG,EAAAE,GAAA,2JAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAA,EAAA,KAAAG,EAAAE,GAAA,kGAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAA,EAAA,KAAAG,EAAAE,GAAA,mFAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,iCAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,cAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,oKAAAF,EAAAE,GAAA,KAAAL,EAAA,OAAAA,EAAA,QAAmqFM,YAAA,iBAA2BN,EAAA,QAAaM,YAAA,iBAA2BH,EAAAE,GAAA,WAAAF,EAAAE,GAAA,aAAAL,EAAA,QAAmDM,YAAA,iBAA2BH,EAAAE,GAAA,SAAAF,EAAAE,GAAA,qBAAuCL,EAAA,QAAkBM,YAAA,cAAwBH,EAAAE,GAAA,WAAAF,EAAAE,GAAA,aAA+BL,EAAA,QAAoBM,YAAA,cAAwBH,EAAAE,GAAA,WAAAF,EAAAE,GAAA,MAAAL,EAAA,QAA4CM,YAAA,gBAA0BH,EAAAE,GAAA,OAAAF,EAAAE,GAAA,cAA6BL,EAAA,QAAmBM,YAAA,cAAwBH,EAAAE,GAAA,eAAAF,EAAAE,GAAA,wCAA4DL,EAAA,QAAsBM,YAAA,iBAA2BH,EAAAE,GAAA,aAAAF,EAAAE,GAAA,+CAAkEF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,YAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,+BAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAA,EAAA,MAAAG,EAAAE,GAAA,qCAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,4BAAAF,EAAAE,GAAA,KAAAL,EAAA,OAAAA,EAAA,QAA+QM,YAAA,iBAA2BN,EAAA,QAAaM,YAAA,iBAA2BH,EAAAE,GAAA,WAAAF,EAAAE,GAAA,aAAAL,EAAA,QAAmDM,YAAA,iBAA2BH,EAAAE,GAAA,SAAAF,EAAAE,GAAA,qBAAuCL,EAAA,QAAkBM,YAAA,cAAwBH,EAAAE,GAAA,WAAAF,EAAAE,GAAA,aAA+BL,EAAA,QAAoBM,YAAA,cAAwBH,EAAAE,GAAA,WAAAF,EAAAE,GAAA,MAAAL,EAAA,QAA4CM,YAAA,gBAA0BH,EAAAE,GAAA,OAAAF,EAAAE,GAAA,cAA6BL,EAAA,QAAmBM,YAAA,cAAwBH,EAAAE,GAAA,eAAAF,EAAAE,GAAA,sEAA6FL,EAAA,QAAmBM,YAAA,cAAwBH,EAAAE,GAAA,aAAAF,EAAAE,GAAA,yDAA4DL,EAAA,QAAqCM,YAAA,gBAA0BH,EAAAE,GAAA,iBAAAF,EAAAE,GAAA,gCCY7zIE,EAbyBC,EAAQ,OAajCC,CAXA,KAaEd,GATF,EAEA,KAEA,KAEA,MAUee,EAAA,QAAAH,EAAiB,8BCtBhCI,EAAAC,QAAiBJ,EAAQ","file":"static/js/63.54ea7ccba33216c57731.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('h1',[_vm._v(\"简介\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。每一个 Vuex 应用的核心就是 \"),_c('code',[_vm._v(\"store\")]),_vm._v(\"（仓库）。“store” 基本上就是一个容器，它包含着你的应用中大部分的状态 ( state )。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"（1）Vuex 的状态存储是响应式的。当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"（2）改变 store 中的状态的唯一途径就是\"),_c('code',[_vm._v(\"显式地提交 (commit) mutation\")]),_vm._v(\"。这样使得我们可以方便地跟踪每一个状态的变化。\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"主要包括以下几个模块：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"State：定义了应用状态的数据结构，可以在这里设置默认的初始状态。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Getter：允许组件从 Store 中获取数据，mapGetters 辅助函数仅仅是将 store 中的 getter 映射到局部计算属性。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Mutation：是唯一更改 store 中状态的方法，且\"),_c('code',[_vm._v(\"必须是同步函数\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Action： @用于提交 mutation，而不是直接变更状态，可以包含任意\"),_c('code',[_vm._v(\"异步操作\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Module：允许将单一的 Store 拆分为多个 store 且同时保存在单一的状态树中。\")])]),_vm._v(\" \"),_c('h1',[_vm._v(\"常见问题QA\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"vuex是什么？什么场景使用？\")]),_vm._v(\" \"),_c('li',[_vm._v(\"vuex有哪几种属性？\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Vuex中actions和mutations的区别\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"1、vuex是什么？什么场景使用？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。简单来说就是：应用遇到多个组件共享状态时，使用vuex。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"场景：多个组件共享数据或者是跨组件传递数据时\")]),_vm._v(\" \"),_c('p',[_vm._v(\"vuex的流程\")]),_vm._v(\" \"),_c('p',[_vm._v(\"页面通过mapAction异步提交事件到action。action通过commit把对应参数同步提交到mutation，mutation会修改state中对应的值。最后通过getter把对应值跑出去，在页面的计算属性中，通过，mapGetter来动态获取state中的值\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"2、vuex有哪几种属性？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"有五种,分别是State , Getter , Mutation , Action , Module (就是mapAction)\")]),_vm._v(\" \"),_c('ol',[_c('li',[_c('p',[_vm._v(\"state：vuex的基本数据，用来存储变量\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"getter：从基本数据(state)派生的数据，相当于state的计算属性\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"mutation：提交更新数据的方法，必须是同步的(如果需要异步使用action)。每个mutation 都有一个字符串的 事件类型 (type) 和 一个 回调函数 (handler)。回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数，提交载荷作为第二个参数。\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"action：和mutation的功能大致相同，不同之处在于 ==》1. Action 提交的是 mutation，而不是直接变更状态。 2. Action 可以包含任意异步操作。\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"modules：模块化vuex，可以让每一个模块拥有自己的state、mutation、action、getters,使得结构非常清晰，方便管理。\")])])]),_vm._v(\" \"),_c('h2',[_vm._v(\"3、Vuex中actions和mutations的区别\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"Mutation\")]),_vm._v(\" \"),_c('p',[_vm._v(\"更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。Vuex 中的 mutation 非常类似于事件：每个 mutation 都有一个字符串的 事件类型 (type) 和 一个 回调函数 (handler)。这个回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数\")]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"language-jsx\"},[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"const\")]),_vm._v(\" store = \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"new\")]),_vm._v(\" Vuex.Store({\\n  \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"state\")]),_vm._v(\": {\\n    \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"count\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"\\n  },\\n  \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"mutations\")]),_vm._v(\": {\\n    increment (state) {\\n      \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 变更状态\")]),_vm._v(\"\\n      state.count++\\n    }\\n  }\\n})\\n\")])]),_vm._v(\" \"),_c('h3',[_vm._v(\"Action\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Action 类似于 mutation，不同在于：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"Action 提交的是 mutation，而不是直接变更状态。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Action 可以包含任意异步操作。 .\")])]),_vm._v(\" \"),_c('pre',[_c('code',{staticClass:\"language-jsx\"},[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"const\")]),_vm._v(\" store = \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"new\")]),_vm._v(\" Vuex.Store({\\n  \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"state\")]),_vm._v(\": {\\n    \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"count\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"\\n  },\\n  \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"mutations\")]),_vm._v(\": {\\n    increment (state) {\\n      state.count++\\n    }\\n  },\\n  \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"actions\")]),_vm._v(\": {\\n    increment (context) {\\n      context.commit(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'increment'\")]),_vm._v(\")\\n    }\\n  }\\n})\\n\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7341160c\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./node_modules/vue-markdown-loader/_cache/VuexBasic.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7341160c\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../vue-loader/lib/selector?type=template&index=0!./VuexBasic.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader!./node_modules/vue-markdown-loader/_cache/VuexBasic.vue\n// module id = null\n// module chunks = ","module.exports = require(\"!!vue-loader!../../../../node_modules/vue-markdown-loader/_cache/VuexBasic.vue\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/posts/vue/VuexBasic.md\n// module id = RMS1\n// module chunks = 63"],"sourceRoot":""}